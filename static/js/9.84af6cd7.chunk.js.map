{"version":3,"sources":["modules/add-new-word-modal-window/styles.module.scss","modules/add-new-word-modal-window/state.js","modules/add-new-word-modal-window/index.js","modules/selected-category/index.js","components/button/index.js","components/input/index.js","components/input/styles.module.scss","components/button/styles.module.scss","components/items-dependent/no-items-exist/index.js","components/items-dependent/no-items-exist/styles.module.scss","components/items-dependent/items-exist/index.js","components/items-dependent/items-exist/styles.module.scss"],"names":["module","exports","useNewWordModalWindow","category","useState","isNewWordModalOpen","setNewWordModalOpen","wordInputValues","setWordInputValues","inputHandleChange","event","name","target","newValue","value","AddNewWordModalWindow","onClose","onWordAdd","useWords","onSubmit","useCallback","className","styles","blockWrapper","closeButton","onClick","inputsWrapper","placeholder","onChange","text","button","SelectedCategory","useRouteMatch","params","filteredWords","words","filter","word","wordBelongsToCategory","length","title","buttonText","map","index","key","targetWord","sourceWord","Button","ClassName","Input","htmlFor","inputWrapper","input","NoItemsExist","ItemsExist","children","header","content"],"mappings":"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","file":"static/js/9.84af6cd7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockWrapper\":\"styles_blockWrapper__1cbbB\",\"closeButton\":\"styles_closeButton__ye5z0\",\"inputsWrapper\":\"styles_inputsWrapper__v9jZk\",\"button\":\"styles_button__28Jtq\"};","import { useState } from 'react';\n\nexport const useNewWordModalWindow = (category) => {\n  const [isNewWordModalOpen, setNewWordModalOpen] = useState(false);\n  const [wordInputValues, setWordInputValues] = useState({});\n\n  const inputHandleChange = (event) => {\n    const name = event.target.name;\n    const newValue = event.target.value;\n\n    setWordInputValues({ ...wordInputValues, [name]: newValue, wordBelongsToCategory: category });\n  };\n\n  return {\n    isNewWordModalOpen,\n    setNewWordModalOpen,\n    wordInputValues,\n    setWordInputValues,\n    inputHandleChange\n  };\n};\n\nexport default useNewWordModalWindow;\n","import React, { useCallback } from 'react';\nimport { useWords } from '../words/state';\nimport Input from '../../components/input';\nimport Button from '../../components/button';\nimport useNewWordModalWindow from './state';\nimport styles from './styles.module.scss';\n\nconst AddNewWordModalWindow = ({ onClose, category }) => {\n  const { wordInputValues, inputHandleChange } = useNewWordModalWindow(category);\n  const { onWordAdd } = useWords();\n\n  const onSubmit = useCallback(() => {\n    onWordAdd(wordInputValues);\n    onClose();\n  }, [wordInputValues, onClose, onWordAdd]);\n\n  return (\n    <div className={styles.blockWrapper}>\n      <div className={styles.closeButton} onClick={onClose}>\n        &times;\n      </div>\n      <div className={styles.inputsWrapper}>\n        <Input\n          placeholder={'What is the word you want to learn?'}\n          name={'targetWord'}\n          onChange={inputHandleChange}\n        />\n        <Input\n          placeholder={'What is the translation of the word?'}\n          name={'sourceWord'}\n          onChange={inputHandleChange}\n        />\n      </div>\n      <Button text={'submit'} className={styles.button} onClick={onSubmit} />\n    </div>\n  );\n};\n\nexport default AddNewWordModalWindow;\n","import React, { useState } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useWords } from '../words/state';\nimport AddNewWordModalWindow from '../add-new-word-modal-window';\nimport NoItemsExist from '../../components/items-dependent/no-items-exist';\nimport ItemsExist from '../../components/items-dependent/items-exist';\n\nconst SelectedCategory = () => {\n  const { category } = useRouteMatch().params;\n  const [isNewWordModalOpen, setNewWordModalOpen] = useState(false);\n  const { words } = useWords();\n\n  const filteredWords = words.filter((word) => word.wordBelongsToCategory === category);\n\n  return (\n    <>\n      {isNewWordModalOpen && (\n        <AddNewWordModalWindow onClose={() => setNewWordModalOpen(false)} category={category} />\n      )}\n      {filteredWords.length === 0 ? (\n        <NoItemsExist\n          title={\n            <>\n              You don't have any words in <b>{category}</b> category. Let's add something!\n            </>\n          }\n          buttonText={'add new word'}\n          onClick={() => setNewWordModalOpen(true)}\n        />\n      ) : (\n        <ItemsExist\n          title={category}\n          buttonText={'add new word'}\n          onClick={() => setNewWordModalOpen(true)}>\n          {filteredWords.map((word, index) => (\n            <div key={index}>\n              <span>{word.targetWord}</span>\n              <span>{word.sourceWord}</span>\n            </div>\n          ))}\n        </ItemsExist>\n      )}\n    </>\n  );\n};\n\nexport default SelectedCategory;\n","import React from 'react';\nimport ClassName from 'classnames';\nimport styles from './styles.module.scss';\n\nconst Button = ({ text, className, onClick }) => {\n  return (\n    <button className={ClassName(className, styles.button)} onClick={onClick}>\n      <span className={styles.text}>{text}</span>\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport styles from './styles.module.scss';\n\nconst Input = ({ placeholder, name, onChange }) => {\n  return (\n    <label htmlFor={name} className={styles.inputWrapper}>\n      <input className={styles.input} placeholder={placeholder} name={name} onChange={onChange} />\n    </label>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"styles_inputWrapper__2lT0Z\",\"input\":\"styles_input__3SPji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__1N-yY\",\"text\":\"styles_text__pgtIg\"};","import React from 'react';\nimport Button from '../../button';\nimport styles from './styles.module.scss';\n\nconst NoItemsExist = ({ title, buttonText, onClick }) => {\n  return (\n    <>\n      <div className={styles.title}>{title}</div>\n      <Button text={buttonText} className={styles.button} onClick={onClick} />\n    </>\n  );\n};\n\nexport default NoItemsExist;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__57__P\",\"button\":\"styles_button__469we\"};","import React from 'react';\nimport Button from '../../button';\nimport styles from './styles.module.scss';\n\nconst ItemsExist = ({ title, buttonText, onClick, children }) => {\n  return (\n    <>\n      <div className={styles.header}>\n        <div className={styles.title}>{title}</div>\n        <Button text={buttonText} className={styles.button} onClick={onClick} />\n      </div>\n      <div className={styles.content}>{children}</div>\n    </>\n  );\n};\n\nexport default ItemsExist;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__8jyxl\",\"title\":\"styles_title__ZGPKi\",\"button\":\"styles_button__Zh_tZ\",\"content\":\"styles_content__2xZEM\"};"],"sourceRoot":""}