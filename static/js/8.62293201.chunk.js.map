{"version":3,"sources":["modules/add-new-category-modal-window/styles.module.scss","modules/selected-language/styles.module.scss","modules/add-new-category-modal-window/state.js","modules/add-new-category-modal-window/index.js","modules/selected-language/index.js","components/button/index.js","components/close-button/index.js","components/input/index.js","components/input/styles.module.scss","components/button/styles.module.scss","components/close-button/styles.module.scss","components/items-dependent/no-items-exist/index.js","components/items-dependent/no-items-exist/styles.module.scss","components/items-dependent/items-exist/index.js","components/items-dependent/items-exist/styles.module.scss","components/to-previous-page-button/index.js","components/to-previous-page-button/styles.module.scss"],"names":["module","exports","useNewCategoryModalWindow","languageId","onCategoryAdd","useCategories","useState","categoryInputValue","setCategoryInputValue","onCategorySubmit","useCallback","name","AddNewCategoryModalWindow","onClose","onSubmit","onCategoryNameChange","event","target","value","className","styles","blockWrapper","closeButton","onClick","inputsWrapper","placeholder","onChange","text","button","SelectedLanguage","languages","useLanguages","useRouteMatch","params","sourceLanguage","targetLanguage","isNewCategoryModalOpen","setNewCategoryModalOpen","selectedLanguage","find","language","filteredCategories","categories","filter","category","id","toPreviousPageButton","to","length","title","buttonText","map","index","key","Button","ClassName","CloseButton","Input","htmlFor","inputWrapper","input","NoItemsExist","ItemsExist","children","header","content","ToPreviousPageButton","history","useHistory","push","classNames","icon","faArrowAltCircleLeft"],"mappings":"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","file":"static/js/8.62293201.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockWrapper\":\"styles_blockWrapper__3CL1G\",\"closeButton\":\"styles_closeButton__1da9x\",\"inputsWrapper\":\"styles_inputsWrapper__3kD64\",\"button\":\"styles_button__1zn8l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toPreviousPageButton\":\"styles_toPreviousPageButton__1MlY6\",\"category\":\"styles_category__2Lsbx\"};","import { useState, useCallback } from 'react';\nimport { useCategories } from '../../state/categories';\n\nexport const useNewCategoryModalWindow = ({ languageId }) => {\n  const { onCategoryAdd } = useCategories();\n  const [categoryInputValue, setCategoryInputValue] = useState('');\n\n  const onCategorySubmit = useCallback(() => {\n    onCategoryAdd({\n      languageId,\n      name: categoryInputValue\n    });\n  }, [languageId, categoryInputValue, onCategoryAdd]);\n\n  return {\n    categoryInputValue,\n    setCategoryInputValue,\n    onCategorySubmit\n  };\n};\n\nexport default useNewCategoryModalWindow;\n","import React, { useCallback } from 'react';\nimport Input from '../../components/input';\nimport Button from '../../components/button';\nimport CloseButton from '../../components/close-button';\nimport useNewCategoryModalWindow from './state';\nimport styles from './styles.module.scss';\n\nconst AddNewCategoryModalWindow = ({ onClose, languageId }) => {\n  const {\n    categoryInputValue,\n    setCategoryInputValue,\n    onCategorySubmit\n  } = useNewCategoryModalWindow({ languageId });\n\n  const onSubmit = useCallback(() => {\n    onCategorySubmit();\n    onClose();\n  }, [onClose, onCategorySubmit]);\n\n  const onCategoryNameChange = useCallback(\n    (event) => {\n      setCategoryInputValue(event.target.value);\n    },\n    [setCategoryInputValue]\n  );\n\n  return (\n    <div className={styles.blockWrapper}>\n      <CloseButton className={styles.closeButton} onClick={onClose} />\n      <div className={styles.inputsWrapper}>\n        <Input\n          placeholder={'Name of the category'}\n          name=\"name\"\n          value={categoryInputValue}\n          onChange={onCategoryNameChange}\n        />\n      </div>\n      <Button text={'submit'} className={styles.button} onClick={onSubmit} />\n    </div>\n  );\n};\n\nexport default AddNewCategoryModalWindow;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useRouteMatch } from 'react-router-dom';\nimport { useCategories } from '../../state/categories';\nimport { useLanguages } from '../../state/languages';\nimport ToPreviousPageButton from '../../components/to-previous-page-button';\nimport NoItemsExist from '../../components/items-dependent/no-items-exist';\nimport ItemsExist from '../../components/items-dependent/items-exist';\nimport AddNewCategoryModalWindow from '../add-new-category-modal-window';\nimport styles from './styles.module.scss';\n\nconst SelectedLanguage = () => {\n  const { languages } = useLanguages();\n  const { sourceLanguage, targetLanguage } = useRouteMatch().params;\n  const [isNewCategoryModalOpen, setNewCategoryModalOpen] = useState(false);\n\n  const selectedLanguage = languages.find((language) => {\n    return language.sourceLanguage === sourceLanguage && language.targetLanguage === targetLanguage;\n  });\n\n  const { categories } = useCategories();\n\n  const filteredCategories = categories.filter(\n    (category) => category.languageId === selectedLanguage.id\n  );\n\n  if (!selectedLanguage) {\n    return \"Language doesn't exist\";\n  }\n\n  return (\n    <>\n      <ToPreviousPageButton className={styles.toPreviousPageButton} to=\"/languages\" />\n      {isNewCategoryModalOpen && (\n        <AddNewCategoryModalWindow\n          onClose={() => setNewCategoryModalOpen(false)}\n          languageId={selectedLanguage.id}\n        />\n      )}\n      {filteredCategories.length === 0 && (\n        <NoItemsExist\n          title={\n            <>\n              Let's create a new category for <b>{sourceLanguage}</b>!\n            </>\n          }\n          buttonText={'add new category'}\n          onClick={() => setNewCategoryModalOpen(true)}\n        />\n      )}\n\n      {filteredCategories.length > 0 && (\n        <ItemsExist\n          title={sourceLanguage}\n          buttonText={'add new category'}\n          onClick={() => setNewCategoryModalOpen(true)}>\n          {filteredCategories.map((category, index) => (\n            <NavLink\n              to={`/${sourceLanguage}-${targetLanguage}/${category.name}`}\n              key={index}\n              className={styles.category}>\n              {category.name}\n            </NavLink>\n          ))}\n        </ItemsExist>\n      )}\n    </>\n  );\n};\n\nexport default SelectedLanguage;\n","import React from 'react';\nimport ClassName from 'classnames';\nimport styles from './styles.module.scss';\n\nconst Button = ({ text, className, onClick }) => {\n  return (\n    <button className={ClassName(className, styles.button)} onClick={onClick}>\n      <span className={styles.text}>{text}</span>\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport ClassName from 'classnames';\nimport styles from './styles.module.scss';\n\nconst CloseButton = ({ className, onClick }) => {\n  return (\n    <div className={ClassName(styles.closeButton, className)} onClick={onClick}>\n      &times;\n    </div>\n  );\n};\n\nexport default CloseButton;\n","import React from 'react';\nimport styles from './styles.module.scss';\n\nconst Input = ({ placeholder, name, onChange }) => {\n  return (\n    <label htmlFor={name} className={styles.inputWrapper}>\n      <input className={styles.input} placeholder={placeholder} name={name} onChange={onChange} />\n    </label>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"styles_inputWrapper__2lT0Z\",\"input\":\"styles_input__3SPji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__1N-yY\",\"text\":\"styles_text__pgtIg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"closeButton\":\"styles_closeButton__XSUlW\"};","import React from 'react';\nimport Button from '../../button';\nimport styles from './styles.module.scss';\n\nconst NoItemsExist = ({ title, buttonText, onClick }) => {\n  return (\n    <>\n      <div className={styles.title}>{title}</div>\n      <Button text={buttonText} className={styles.button} onClick={onClick} />\n    </>\n  );\n};\n\nexport default NoItemsExist;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__57__P\",\"button\":\"styles_button__469we\"};","import React from 'react';\nimport Button from '../../button';\nimport styles from './styles.module.scss';\n\nconst ItemsExist = ({ title, buttonText, onClick, children }) => {\n  return (\n    <>\n      <div className={styles.header}>\n        <div className={styles.title}>{title}</div>\n        <Button text={buttonText} className={styles.button} onClick={onClick} />\n      </div>\n      <div className={styles.content}>{children}</div>\n    </>\n  );\n};\n\nexport default ItemsExist;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__8jyxl\",\"title\":\"styles_title__ZGPKi\",\"button\":\"styles_button__Zh_tZ\",\"content\":\"styles_content__2xZEM\"};","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\nimport classNames from 'classnames';\nimport styles from './styles.module.scss';\n\nconst ToPreviousPageButton = ({ to, className }) => {\n  const history = useHistory();\n\n  const onClick = useCallback(() => {\n    history.push(to);\n  }, [to, history]);\n\n  return (\n    <div className={classNames(styles.button, className)}>\n      <div onClick={onClick}>\n        <FontAwesomeIcon onClick={onClick} icon={faArrowAltCircleLeft} />\n      </div>\n    </div>\n  );\n};\n\nexport default ToPreviousPageButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__7D8eJ\"};"],"sourceRoot":""}