{"version":3,"sources":["state/languages.js","modules/languages/utils/local-storage.js","state/index.js","state/categories.js","modules/categories/utils/local-storage.js","state/words.js","modules/words/utils/local-storage.js","utils/carets.js","utils/css.js","utils/local-storage.js","state/theming.js","components/display-box/styles.module.scss","components/start-page-button/styles.module.scss","modules/app/styles.module.scss","utils/json.js","components/suspense-loading/index.js","components/display-box/index.js","components/start-page-button/lightning.js","components/start-page-button/index.js","modules/app/index.js","index.js"],"names":["initialLanguages","json","localStorage","getItem","safeParse","getPersistedLanguage","LanguagesContext","createContext","useLanguages","useContext","LanguagesProvider","children","useState","languages","setLanguages","onLanguageAdd","useCallback","language","onLanguageDelete","languageToRemove","newLanguages","filter","id","useEffect","setItem","JSON","stringify","value","Provider","AppStateContext","useAppState","AppStateProvider","submittedTranslationDirection","setTranslationDirection","caretIndex","setCaretIndex","caretOptions","submittedCaret","setSubmittedCaret","initialCategories","getPersistedCategory","CategoriesContext","useCategories","CategoriesProvider","categories","setCategories","onCategoryAdd","category","newCategory","uuid","onCategoryDelete","categoryIdToRemove","newCategories","initialWords","getPersistedWord","WordsContext","useWords","WordsProvider","words","setWords","onWordAdd","word","newWord","onWordDelete","wordIdToRemove","newWords","setCssVariable","variableName","document","documentElement","style","setProperty","persistBackgroundColor","color","persistTextColor","persistedBackgroundColor","getPersistedBackgroundColor","persistedTextColor","getPersistedTextColor","lighterTextColor","lighten","toString","persistedDisplayColor","getPersistedDisplayColor","ThemingContext","useTheming","ThemingProvider","backgroundColor","setBackgroundColor","textColor","setTextColor","displayColor","setDisplayColor","persistDisplayColor","module","exports","fallbackValue","parse","error","LoadingComponent","loading","className","size","DisplayBox","styles","wrapper","LightningIcon","xmlns","x","y","enableBackground","version","viewBox","xmlSpace","cx","cy","r","fill","d","StartPageButton","to","history","useHistory","onClick","push","classNames","button","StartPageAsync","lazy","LanguagesAsync","SelectedLanguageAsync","SelectedCategoryAsync","SettingsWindowAsync","GameSettingsWindowAsync","NewGame","Application","startPageButton","fallback","path","exact","component","ReactDOM","render","basename","hashType","getElementById"],"mappings":"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","file":"static/js/main.2ef3a588.chunk.js","sourcesContent":["import React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { persistLanguage, getPersistedLanguage } from '../modules/languages/utils/local-storage';\n\nconst initialLanguages = getPersistedLanguage();\n\nconst LanguagesContext = createContext({});\n\nconst LanguagesProvider = ({ children }) => {\n  const [languages, setLanguages] = useState(initialLanguages);\n\n  const onLanguageAdd = useCallback((language) => {\n    setLanguages((languages) => [...languages, language]);\n  }, []);\n\n  const onLanguageDelete = useCallback(\n    (languageToRemove) => {\n      const newLanguages = languages.filter((language) => language.id !== languageToRemove);\n      setLanguages(newLanguages);\n    },\n    [languages]\n  );\n\n  useEffect(() => {\n    persistLanguage(languages);\n  }, [languages]);\n\n  const value = {\n    languages,\n    onLanguageAdd,\n    onLanguageDelete\n  };\n\n  return <LanguagesContext.Provider value={value}>{children}</LanguagesContext.Provider>;\n};\n\nexport const useLanguages = () => useContext(LanguagesContext);\n\nexport default LanguagesProvider;\n","import { safeParse } from '../../../utils/json';\n\nexport const persistLanguage = (language) =>\n  localStorage.setItem('language', JSON.stringify(language));\n\nexport const getPersistedLanguage = () => {\n  const json = localStorage.getItem('language');\n  return safeParse(json, []);\n};\n","import React, { createContext, useContext, useState } from 'react';\nimport { caretOptions } from '../utils/carets';\n\nconst AppStateContext = createContext({});\n\nconst AppStateProvider = ({ children }) => {\n  const [submittedTranslationDirection, setTranslationDirection] = useState('sourceLanguage');\n  const [caretIndex, setCaretIndex] = useState(0);\n  const [submittedCaret, setSubmittedCaret] = useState(caretOptions[caretIndex]);\n\n  const value = {\n    submittedTranslationDirection,\n    setTranslationDirection,\n    caretIndex,\n    setCaretIndex,\n    submittedCaret,\n    setSubmittedCaret\n  };\n\n  return <AppStateContext.Provider value={value}>{children}</AppStateContext.Provider>;\n};\n\nexport const useAppState = () => useContext(AppStateContext);\n\nexport default AppStateProvider;\n","import React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { persistCategory, getPersistedCategory } from '../modules/categories/utils/local-storage';\nimport { uuid } from 'uuidv4';\n\nconst initialCategories = getPersistedCategory();\n\nconst CategoriesContext = createContext({});\n\nconst CategoriesProvider = ({ children }) => {\n  const [categories, setCategories] = useState(initialCategories);\n\n  const onCategoryAdd = useCallback((category) => {\n    const newCategory = {\n      id: uuid(),\n      ...category\n    };\n    setCategories((categories) => [...categories, newCategory]);\n  }, []);\n\n  const onCategoryDelete = useCallback(\n    (categoryIdToRemove) => {\n      const newCategories = categories.filter((category) => category.id !== categoryIdToRemove);\n      setCategories(newCategories);\n    },\n    [categories]\n  );\n\n  useEffect(() => {\n    persistCategory(categories);\n  }, [categories]);\n\n  const value = {\n    categories,\n    onCategoryAdd,\n    onCategoryDelete\n  };\n\n  return <CategoriesContext.Provider value={value}>{children}</CategoriesContext.Provider>;\n};\n\nexport const useCategories = () => useContext(CategoriesContext);\n\nexport default CategoriesProvider;\n","import { safeParse } from '../../../utils/json';\n\nexport const persistCategory = (category) =>\n  localStorage.setItem('category', JSON.stringify(category));\n\nexport const getPersistedCategory = () => {\n  const json = localStorage.getItem('category');\n  return safeParse(json, []);\n};\n","import React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { persistWord, getPersistedWord } from '../modules/words/utils/local-storage';\nimport { uuid } from 'uuidv4';\n\nconst initialWords = getPersistedWord();\n\nconst WordsContext = createContext({});\n\nconst WordsProvider = ({ children }) => {\n  const [words, setWords] = useState(initialWords);\n\n  const onWordAdd = useCallback((word) => {\n    const newWord = {\n      id: uuid(),\n      ...word\n    };\n    setWords((words) => [...words, newWord]);\n  }, []);\n\n  const onWordDelete = useCallback(\n    (wordIdToRemove) => {\n      const newWords = words.filter((word) => word.id !== wordIdToRemove);\n      setWords(newWords);\n    },\n    [words]\n  );\n\n  useEffect(() => {\n    persistWord(words);\n  }, [words]);\n\n  const value = {\n    words,\n    onWordAdd,\n    onWordDelete\n  };\n\n  return <WordsContext.Provider value={value}>{children}</WordsContext.Provider>;\n};\n\nexport const useWords = () => useContext(WordsContext);\n\nexport default WordsProvider;\n","import { safeParse } from '../../../utils/json';\n\nexport const persistWord = (word) => localStorage.setItem('word', JSON.stringify(word));\n\nexport const getPersistedWord = () => {\n  const json = localStorage.getItem('word');\n  return safeParse(json, []);\n};\n","export const caretOptions = ['⚡', '❤', '⭐', '💎', '🔻', '▫', '•'];\n","export const setCssVariable = (variableName, value) => {\n  if (!value) {\n    return;\n  }\n  document.documentElement.style.setProperty(variableName, value);\n};\n","import { safeParse } from './json';\n\n// const createPersistColorFunction = (colorName) => (color) =>\n//   localStorage.setItem(colorName, JSON.stringify(color));\n\n// export const persistBackgroundColor = createPersistColorFunction('background-color');\n\nexport const persistBackgroundColor = (color) =>\n  localStorage.setItem('background-color', JSON.stringify(color));\n\nexport const getPersistedBackgroundColor = () => {\n  const json = localStorage.getItem('background-color');\n  return safeParse(json);\n};\n\nexport const persistTextColor = (color) =>\n  localStorage.setItem('text-color', JSON.stringify(color));\n\nexport const getPersistedTextColor = () => {\n  const json = localStorage.getItem('text-color');\n  return safeParse(json);\n};\n\nexport const persistDisplayColor = (color) =>\n  localStorage.setItem('display-color', JSON.stringify(color));\n\nexport const getPersistedDisplayColor = () => {\n  const json = localStorage.getItem('display-color');\n  return safeParse(json);\n};\n","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport color from 'color';\nimport { setCssVariable } from '../utils/css';\nimport {\n  persistBackgroundColor,\n  getPersistedBackgroundColor,\n  persistTextColor,\n  getPersistedTextColor,\n  persistDisplayColor,\n  getPersistedDisplayColor\n} from '../utils/local-storage';\n\nconst DEFAULT_BACKGRONUD_COLOR = '#5d5abf';\nconst DEFAULT_TEXT_COLOR = '#7b7676';\nconst DEFAULT_DISPLAY_COLOR = 'white';\n\nconst persistedBackgroundColor = getPersistedBackgroundColor();\nconst persistedTextColor = getPersistedTextColor();\nconst lighterTextColor = color(persistedTextColor)\n  .lighten(0.3)\n  .toString();\nconst persistedDisplayColor = getPersistedDisplayColor();\n\nsetCssVariable('--background-color', persistBackgroundColor);\nsetCssVariable('--text-color', persistTextColor);\nsetCssVariable('--text-color-light', lighterTextColor);\nsetCssVariable('--display-color', persistedDisplayColor);\n\nconst ThemingContext = createContext({});\n\nconst ThemingProvider = ({ children }) => {\n  const [backgroundColor, setBackgroundColor] = useState(\n    persistedBackgroundColor || DEFAULT_BACKGRONUD_COLOR\n  );\n  const [textColor, setTextColor] = useState(persistedTextColor || DEFAULT_TEXT_COLOR);\n  const [displayColor, setDisplayColor] = useState(persistedDisplayColor || DEFAULT_DISPLAY_COLOR);\n\n  useEffect(() => {\n    setCssVariable('--background-color', backgroundColor);\n    persistBackgroundColor(backgroundColor);\n  }, [backgroundColor]);\n\n  useEffect(() => {\n    const lighterTextColor = color(textColor)\n      .lighten(0.3)\n      .toString();\n    setCssVariable('--text-color', textColor);\n    setCssVariable('--text-color-light', lighterTextColor);\n    persistTextColor(textColor);\n  }, [textColor]);\n\n  useEffect(() => {\n    setCssVariable('--display-color', displayColor);\n    persistDisplayColor(displayColor);\n  }, [displayColor]);\n\n  const value = {\n    backgroundColor,\n    textColor,\n    displayColor,\n    setBackgroundColor,\n    setTextColor,\n    setDisplayColor\n  };\n\n  return <ThemingContext.Provider value={value}>{children}</ThemingContext.Provider>;\n};\n\nexport const useTheming = () => useContext(ThemingContext);\n\nexport default ThemingProvider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__3HDkj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__3GviN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"startPageButton\":\"styles_startPageButton__3xlAw\"};","export const safeParse = (json, fallbackValue) => {\n  if (!json) {\n    return fallbackValue;\n  }\n\n  try {\n    return JSON.parse(json);\n  } catch (error) {\n    return fallbackValue;\n  }\n};\n","import React, { useState } from 'react';\nimport BarLoader from 'react-spinners/BarLoader';\n\nconst LoadingComponent = () => {\n  const [loading] = useState(true);\n\n  return (\n    <div className=\"sweet-loading\">\n      <BarLoader size={150} color={'gray'} loading={loading} />\n    </div>\n  );\n};\n\nexport default LoadingComponent;\n","import React from 'react';\nimport styles from './styles.module.scss';\n\nconst DisplayBox = ({ children }) => {\n  return <div className={styles.wrapper}>{children}</div>;\n};\n\nexport default DisplayBox;\n","import React from 'react';\r\n\r\nfunction LightningIcon() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      x=\"0\"\r\n      y=\"0\"\r\n      enableBackground=\"new 0 0 512 512\"\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 512 512\"\r\n      xmlSpace=\"preserve\">\r\n      <circle cx=\"256\" cy=\"256\" r=\"248.5\" fill=\"#FFD164\"></circle>\r\n      <path\r\n        fill=\"#FFE17D\"\r\n        d=\"M357.924 227.994h.04M327.539 79.645h-102.03a24.047 24.047 0 00-22.828 16.485l-54.913 165.734a24.05 24.05 0 0022.828 31.612h49.258l-40.94 130.336c-3.494 11.125 1.497 23.155 11.841 28.539a24.038 24.038 0 0030.168-6.676L376.568 243.2a23.93 23.93 0 005.424-15.206c0-13.282-10.746-24.048-24.028-24.048h-52.169l43.397-89.787a24.048 24.048 0 00-21.653-34.514zm0 48.097h.04-.04z\"></path>\r\n      <path\r\n        fill=\"#FFF\"\r\n        d=\"M357.924 227.994L267.461 227.994 327.539 103.694 225.509 103.694 170.596 269.428 252.614 269.428 201.857 431.019z\"></path>\r\n      <path\r\n        fill=\"#FFC350\"\r\n        d=\"M288.065 472.435c-137.243 0-248.5-111.258-248.5-248.5 0-60.457 21.608-115.855 57.498-158.938C42.343 110.581 7.5 179.214 7.5 256c0 137.242 111.257 248.5 248.5 248.5 76.787 0 145.421-34.844 191.004-89.564-43.083 35.891-98.482 57.499-158.939 57.499z\"></path>\r\n      <path d=\"M437.02 74.98C388.667 26.629 324.38 0 256 0S123.333 26.629 74.98 74.98C26.629 123.333 0 187.62 0 256s26.629 132.667 74.98 181.02C123.333 485.371 187.62 512 256 512s132.667-26.629 181.02-74.98C485.371 388.667 512 324.38 512 256s-26.629-132.667-74.98-181.02zm-10.607 351.433C380.894 471.932 320.374 497 256 497s-124.894-25.068-170.413-70.587S15 320.374 15 256 40.068 131.106 85.587 85.587 191.626 15 256 15s124.894 25.068 170.413 70.587S497 191.626 497 256s-25.068 124.894-70.587 170.413z\"></path>\r\n      <path d=\"M357.924 220.494h-78.508l33.636-69.593a7.499 7.499 0 00-3.489-10.016 7.496 7.496 0 00-10.016 3.489l-38.839 80.357a7.499 7.499 0 006.753 10.764h75.238L221.687 392.917l38.083-121.242a7.5 7.5 0 00-7.155-9.748h-71.632l49.944-150.734h84.659l-2.209 4.572a7.499 7.499 0 003.489 10.016 7.499 7.499 0 0010.016-3.489l7.412-15.335a7.499 7.499 0 00-6.753-10.764h-102.03a7.501 7.501 0 00-7.12 5.141l-54.914 165.734a7.502 7.502 0 007.12 9.859h71.801l-47.695 151.844a7.499 7.499 0 0013.101 6.818L363.87 232.565a7.5 7.5 0 00-5.946-12.071z\"></path>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default LightningIcon;\r\n","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport LightningIcon from './lightning';\nimport classNames from 'classnames';\nimport styles from './styles.module.scss';\n\nconst StartPageButton = ({ to, className }) => {\n  const history = useHistory();\n\n  const onClick = useCallback(() => {\n    history.push(to);\n  }, [to, history]);\n\n  return (\n    <div className={classNames(styles.button, className)}>\n      <div onClick={onClick}>\n        <LightningIcon />\n      </div>\n    </div>\n  );\n};\n\nexport default StartPageButton;\n","import React, { lazy, Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport LoadingComponent from '../../components/suspense-loading';\nimport DisplayBox from '../../components/display-box';\nimport StartPageButton from '../../components/start-page-button';\nimport styles from './styles.module.scss';\n\nconst StartPageAsync = lazy(() => import('../start-page'));\nconst LanguagesAsync = lazy(() => import('../languages'));\nconst SelectedLanguageAsync = lazy(() => import('../selected-language'));\nconst SelectedCategoryAsync = lazy(() => import('../selected-category'));\nconst SettingsWindowAsync = lazy(() => import('../settings-window'));\nconst GameSettingsWindowAsync = lazy(() => import('../game-settings-window'));\nconst NewGame = lazy(() => import('../game'));\n\nconst Application = () => {\n  return (\n    <DisplayBox>\n      <StartPageButton className={styles.startPageButton} to=\"/\" />\n      <Suspense fallback={<LoadingComponent />}>\n        <Switch>\n          <Route path=\"/\" exact component={StartPageAsync} />\n          <Route path=\"/languages\" component={LanguagesAsync} />\n          <Route\n            path=\"/:sourceLanguage-:targetLanguage/:category/game-settings\"\n            component={GameSettingsWindowAsync}\n          />\n          <Route path=\"/:sourceLanguage-:targetLanguage/:category/game\" component={NewGame} />\n          <Route\n            path=\"/:sourceLanguage-:targetLanguage/:category\"\n            component={SelectedCategoryAsync}\n          />\n          <Route path=\"/:sourceLanguage-:targetLanguage\" component={SelectedLanguageAsync} />\n          <Route path=\"/settings\" component={SettingsWindowAsync} />\n        </Switch>\n      </Suspense>\n    </DisplayBox>\n  );\n};\n\nexport default Application;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AppStateProvider from './state';\nimport ThemeProvider from './state/theming';\nimport LanguagesProvider from './state/languages';\nimport CategoriesProvider from './state/categories';\nimport WordsProvider from './state/words';\nimport App from './modules/app';\nimport './index.scss';\nimport 'normalize.css';\n\nReactDOM.render(\n  <Router basename=\"/blitzcards\" hashType=\"noslash\">\n    <ThemeProvider>\n      <LanguagesProvider>\n        <CategoriesProvider>\n          <WordsProvider>\n            <AppStateProvider>\n              <App />\n            </AppStateProvider>\n          </WordsProvider>\n        </CategoriesProvider>\n      </LanguagesProvider>\n    </ThemeProvider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}