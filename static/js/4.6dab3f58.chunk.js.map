{"version":3,"sources":["components/input/styles.module.scss","components/button/styles.module.scss","modules/add-new-language-modal-window/styles.module.scss","modules/languages/no-languages-exist/styles.module.scss","modules/languages/languages-exist/styles.module.scss","components/input/index.js","components/button/index.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","modules/add-new-language-modal-window/state.js","modules/add-new-language-modal-window/index.js","modules/languages/components/new-language-button/index.js","modules/languages/no-languages-exist/index.js","modules/languages/languages-exist/index.js","modules/languages/index.js"],"names":["module","exports","Input","placeholder","name","onChange","className","styles","inputWrapper","input","Button","text","onClick","ClassName","button","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","useNewLanguageModalWindow","useState","isNewLanguageModalOpen","setNewLanguageModalOpen","languageInputValues","setLanguageInputValues","inputHandleChange","event","target","newValue","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","AddNewLanguageModalWindow","onClose","onLanguageAdd","useLanguages","onSubmit","useCallback","blockWrapper","closeButton","inputsWrapper","AddNewLanguageButton","NoLanguagesExist","title","LanguagesExist","languages","existingLanguagesRow","map","language","index","to","targetLanguage","existingLanguage","Languages"],"mappings":"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","file":"static/js/4.6dab3f58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"styles_inputWrapper__2lT0Z\",\"input\":\"styles_input__3SPji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__1N-yY\",\"text\":\"styles_text__pgtIg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockWrapper\":\"styles_blockWrapper__2H4g8\",\"closeButton\":\"styles_closeButton__2OURU\",\"inputsWrapper\":\"styles_inputsWrapper__2EdEO\",\"button\":\"styles_button__32wGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__2OV4-\",\"button\":\"styles_button__21TbM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__1pHK8\",\"existingLanguagesRow\":\"styles_existingLanguagesRow__1oKNd\",\"existingLanguage\":\"styles_existingLanguage__1127L\"};","import React from 'react';\nimport styles from './styles.module.scss';\n\nconst Input = ({ placeholder, name, onChange }) => {\n  return (\n    <label className={styles.inputWrapper}>\n      <input className={styles.input} placeholder={placeholder} name={name} onChange={onChange} />\n    </label>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport ClassName from 'classnames';\nimport styles from './styles.module.scss';\n\nconst Button = ({ text, className, onClick }) => {\n  return (\n    <button className={ClassName(className, styles.button)} onClick={onClick}>\n      <span className={styles.text}>{text}</span>\n    </button>\n  );\n};\n\nexport default Button;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useState } from 'react';\n\nexport const useNewLanguageModalWindow = () => {\n  const [isNewLanguageModalOpen, setNewLanguageModalOpen] = useState(false);\n  const [languageInputValues, setLanguageInputValues] = useState({});\n\n  const inputHandleChange = (event) => {\n    const name = event.target.name;\n    const newValue = event.target.value;\n\n    setLanguageInputValues({ ...languageInputValues, [name]: newValue });\n  };\n\n  return {\n    isNewLanguageModalOpen,\n    setNewLanguageModalOpen,\n    languageInputValues,\n    setLanguageInputValues,\n    inputHandleChange\n  };\n};\n\nexport default useNewLanguageModalWindow;\n","import React, { useCallback } from 'react';\nimport Input from '../../components/input';\nimport Button from '../../components/button';\nimport useNewLanguageModalWindow from './state';\nimport { useLanguages } from '../../state/languages';\nimport styles from './styles.module.scss';\n\nconst AddNewLanguageModalWindow = ({ onClose }) => {\n  const { languageInputValues, inputHandleChange } = useNewLanguageModalWindow();\n  const { onLanguageAdd } = useLanguages();\n\n  const onSubmit = useCallback(() => {\n    onLanguageAdd(languageInputValues);\n    onClose();\n  }, [languageInputValues, onClose, onLanguageAdd]);\n\n  return (\n    <div className={styles.blockWrapper}>\n      <div className={styles.closeButton} onClick={onClose}>\n        &times;\n      </div>\n      <div className={styles.inputsWrapper}>\n        <Input\n          placeholder={'Which language do you want to learn?'}\n          name={'targetLanguage'}\n          onChange={inputHandleChange}\n        />\n        <Input\n          placeholder={'What will be the source language?'}\n          name={'sourceLanguage'}\n          onChange={inputHandleChange}\n        />\n      </div>\n      <Button text={'submit'} className={styles.button} onClick={onSubmit} />\n    </div>\n  );\n};\n\nexport default AddNewLanguageModalWindow;\n","import React from 'react';\nimport Button from '../../../../components/button';\n\nconst AddNewLanguageButton = ({ className, onClick }) => {\n  return <Button text={'add new language'} className={className} onClick={onClick} />;\n};\n\nexport default AddNewLanguageButton;\n","import React from 'react';\nimport AddNewLanguageModalWindow from '../../add-new-language-modal-window';\nimport AddNewLanguageButton from '../components/new-language-button';\nimport useNewLanguageModalWindow from '../../add-new-language-modal-window/state';\nimport styles from './styles.module.scss';\n\nconst NoLanguagesExist = () => {\n  const { isNewLanguageModalOpen, setNewLanguageModalOpen } = useNewLanguageModalWindow();\n\n  return (\n    <>\n      {isNewLanguageModalOpen && (\n        <AddNewLanguageModalWindow onClose={() => setNewLanguageModalOpen(false)} />\n      )}\n      <div className={styles.title}>{'it is a good time to start learning some language'}</div>\n      <AddNewLanguageButton\n        className={styles.button}\n        onClick={() => setNewLanguageModalOpen(true)}\n      />\n    </>\n  );\n};\n\nexport default NoLanguagesExist;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useLanguages } from '../../../state/languages';\nimport useNewLanguageModalWindow from '../../add-new-language-modal-window/state';\nimport AddNewLanguageButton from '../components/new-language-button';\nimport AddNewLanguageModalWindow from '../../add-new-language-modal-window';\nimport styles from './styles.module.scss';\n\nconst LanguagesExist = () => {\n  const { languages } = useLanguages();\n  const { isNewLanguageModalOpen, setNewLanguageModalOpen } = useNewLanguageModalWindow();\n\n  return (\n    <>\n      {isNewLanguageModalOpen && (\n        <AddNewLanguageModalWindow onClose={() => setNewLanguageModalOpen(false)} />\n      )}\n      <AddNewLanguageButton\n        className={styles.button}\n        onClick={() => setNewLanguageModalOpen(true)}\n      />\n      <div className={styles.existingLanguagesRow}>\n        {languages.map((language, index) => (\n          <NavLink\n            to={`/language/${language.targetLanguage}`}\n            key={index}\n            className={styles.existingLanguage}>\n            {language.targetLanguage}\n          </NavLink>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default LanguagesExist;\n","import React from 'react';\nimport { useLanguages } from '../../state/languages';\nimport NoLanguagesExist from './no-languages-exist';\nimport LanguagesExist from './languages-exist';\n\nconst Languages = () => {\n  const { languages } = useLanguages();\n\n  if (languages.length === 0) {\n    return <NoLanguagesExist />;\n  }\n\n  return <LanguagesExist />;\n};\n\nexport default Languages;\n"],"sourceRoot":""}