{"version":3,"sources":["modules/settings-window/components/color-picker-block/styles.module.scss","modules/settings-window/styles.module.scss","modules/settings-window/components/color-picker-block/index.js","modules/settings-window/color-configuration-view.js","modules/settings-window/index.js","modules/settings-window/state.js"],"names":["module","exports","ColorPickerBlock","className","propertyName","style","onClick","styles","colorPicker","ClassName","colorPreview","ColorConfigurationView","backgroundColor","textColor","displayColor","setBackgroundColor","setTextColor","setDisplayColor","activeSetting","setActiveSetting","onOutsideClick","width","color","onChange","hex","SettingsWindow","useState","useTheming","onActiveSettingChange","useCallback","setting","useSettingsWindow","settingsWindow","left","backgroundColorPreview","displayColorPreview","textColorPreview","right"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,YAAc,4BAA4B,aAAe,6BAA6B,aAAe,+B,oBCAvHD,EAAOC,QAAU,CAAC,eAAiB,+BAA+B,KAAO,qBAAqB,uBAAyB,uCAAuC,oBAAsB,oCAAoC,iBAAmB,iCAAiC,MAAQ,wB,8GCYrQC,EATU,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC1D,OACE,yBAAKH,UAAWI,IAAOC,aACrB,0BAAML,UAAWI,IAAOH,cAAeA,EAAvC,KACA,yBAAKD,UAAWM,IAAUF,IAAOG,aAAcP,GAAYE,MAAOA,EAAOC,QAASA,M,2BC6BzEK,EAjCgB,SAAC,GASzB,IARLC,EAQI,EARJA,gBACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,aACAC,EAKI,EALJA,mBACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,cACAC,EACI,EADJA,iBAEA,OACE,kBAAC,IAAD,CAAqBC,eAAgB,kBAAMD,EAAiB,QACvC,qBAAlBD,GACC,kBAAC,eAAD,CACEG,MAAO,OACPC,MAAOV,EACPW,SAAU,gBAAGC,EAAH,EAAGA,IAAH,OAAaT,EAAmBS,MAG3B,eAAlBN,GACC,kBAAC,eAAD,CAAcG,MAAO,OAAQC,MAAOT,EAAWU,SAAU,gBAAGC,EAAH,EAAGA,IAAH,OAAaR,EAAaQ,MAElE,kBAAlBN,GACC,kBAAC,eAAD,CACEG,MAAO,OACPC,MAAOR,EACPS,SAAU,gBAAGC,EAAH,EAAGA,IAAH,OAAaP,EAAgBO,Q,kBC2BlCC,UAnDQ,WAAO,IAAD,ECHI,WAAO,IAAD,EACKC,mBAAS,MADd,mBAC9BR,EAD8B,KACfC,EADe,OASjCQ,cANFf,EAHmC,EAGnCA,gBACAC,EAJmC,EAInCA,UACAC,EALmC,EAKnCA,aACAC,EANmC,EAMnCA,mBACAC,EAPmC,EAOnCA,aACAC,EARmC,EAQnCA,gBAGIW,EAAwBC,uBAC5B,SAACC,GAKCX,EAJIW,IAAYZ,EAICY,EAHE,QAKrB,CAACZ,IAGH,MAAO,CACLA,gBACAN,kBACAC,YACAC,eACAK,mBACAJ,qBACAC,eACAC,kBACAW,yBDjBEG,GATFnB,EAFyB,EAEzBA,gBACAC,EAHyB,EAGzBA,UACAC,EAJyB,EAIzBA,aACAI,EALyB,EAKzBA,cACAC,EANyB,EAMzBA,iBACAJ,EAPyB,EAOzBA,mBACAC,EARyB,EAQzBA,aACAC,EATyB,EASzBA,gBACAW,EAVyB,EAUzBA,sBAGF,OACE,yBAAKzB,UAAWI,IAAOyB,gBACrB,yBAAK7B,UAAWI,IAAO0B,MACrB,kBAAC,EAAD,CACE9B,UAAWI,IAAO2B,uBAClB9B,aAAc,mBACdC,MAAO,CAAEO,gBAAiBA,GAC1BN,QAAS,kBAAMsB,EAAsB,uBAEvC,kBAAC,EAAD,CACEzB,UAAWI,IAAO4B,oBAClB/B,aAAc,gBACdC,MAAO,CAAEO,gBAAiBE,GAC1BR,QAAS,kBAAMsB,EAAsB,oBAEvC,kBAAC,EAAD,CACEzB,UAAWI,IAAO6B,iBAClBhC,aAAc,aACdC,MAAO,CAAEO,gBAAiBC,GAC1BP,QAAS,kBAAMsB,EAAsB,kBAGzC,yBAAKzB,UAAWI,IAAO8B,OACrB,kBAAC,EAAD,CACEzB,gBAAiBA,EACjBC,UAAWA,EACXC,aAAcA,EACdI,cAAeA,EACfC,iBAAkBA,EAClBJ,mBAAoBA,EACpBC,aAAcA,EACdC,gBAAiBA","file":"static/js/8.260dc6c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorPicker\":\"styles_colorPicker__lDsbT\",\"propertyName\":\"styles_propertyName__2JKod\",\"colorPreview\":\"styles_colorPreview__1qHDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsWindow\":\"styles_settingsWindow__38ObN\",\"left\":\"styles_left__2uQNb\",\"backgroundColorPreview\":\"styles_backgroundColorPreview__oVH4d\",\"displayColorPreview\":\"styles_displayColorPreview__2iRJb\",\"textColorPreview\":\"styles_textColorPreview__3xCVe\",\"right\":\"styles_right__29RxO\"};","import React from 'react';\nimport ClassName from 'classnames';\nimport styles from './styles.module.scss';\n\nconst ColorPickerBlock = ({ className, propertyName, style, onClick }) => {\n  return (\n    <div className={styles.colorPicker}>\n      <span className={styles.propertyName}>{propertyName}:</span>\n      <div className={ClassName(styles.colorPreview, className)} style={style} onClick={onClick} />\n    </div>\n  );\n};\n\nexport default ColorPickerBlock;\n","import React from 'react';\nimport OutsideClickHandler from 'react-outside-click-handler';\nimport { SketchPicker } from 'react-color';\n\nconst ColorConfigurationView = ({\n  backgroundColor,\n  textColor,\n  displayColor,\n  setBackgroundColor,\n  setTextColor,\n  setDisplayColor,\n  activeSetting,\n  setActiveSetting\n}) => {\n  return (\n    <OutsideClickHandler onOutsideClick={() => setActiveSetting(null)}>\n      {activeSetting === 'background-color' && (\n        <SketchPicker\n          width={'20em'}\n          color={backgroundColor}\n          onChange={({ hex }) => setBackgroundColor(hex)}\n        />\n      )}\n      {activeSetting === 'text-color' && (\n        <SketchPicker width={'20em'} color={textColor} onChange={({ hex }) => setTextColor(hex)} />\n      )}\n      {activeSetting === 'display-color' && (\n        <SketchPicker\n          width={'20em'}\n          color={displayColor}\n          onChange={({ hex }) => setDisplayColor(hex)}\n        />\n      )}\n    </OutsideClickHandler>\n  );\n};\n\nexport default ColorConfigurationView;\n","import React from 'react';\nimport { useSettingsWindow } from './state';\nimport ColorPickerBlock from './components/color-picker-block';\nimport ColorConfigurationView from './color-configuration-view';\nimport styles from './styles.module.scss';\n\nconst SettingsWindow = () => {\n  const {\n    backgroundColor,\n    textColor,\n    displayColor,\n    activeSetting,\n    setActiveSetting,\n    setBackgroundColor,\n    setTextColor,\n    setDisplayColor,\n    onActiveSettingChange\n  } = useSettingsWindow();\n\n  return (\n    <div className={styles.settingsWindow}>\n      <div className={styles.left}>\n        <ColorPickerBlock\n          className={styles.backgroundColorPreview}\n          propertyName={'Background color'}\n          style={{ backgroundColor: backgroundColor }}\n          onClick={() => onActiveSettingChange('background-color')}\n        />\n        <ColorPickerBlock\n          className={styles.displayColorPreview}\n          propertyName={'Display color'}\n          style={{ backgroundColor: displayColor }}\n          onClick={() => onActiveSettingChange('display-color')}\n        />\n        <ColorPickerBlock\n          className={styles.textColorPreview}\n          propertyName={'Text color'}\n          style={{ backgroundColor: textColor }}\n          onClick={() => onActiveSettingChange('text-color')}\n        />\n      </div>\n      <div className={styles.right}>\n        <ColorConfigurationView\n          backgroundColor={backgroundColor}\n          textColor={textColor}\n          displayColor={displayColor}\n          activeSetting={activeSetting}\n          setActiveSetting={setActiveSetting}\n          setBackgroundColor={setBackgroundColor}\n          setTextColor={setTextColor}\n          setDisplayColor={setDisplayColor}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsWindow;\n","import { useState, useCallback } from 'react';\nimport { useTheming } from '../../state/theming';\n\nexport const useSettingsWindow = () => {\n  const [activeSetting, setActiveSetting] = useState(null);\n  const {\n    backgroundColor,\n    textColor,\n    displayColor,\n    setBackgroundColor,\n    setTextColor,\n    setDisplayColor\n  } = useTheming();\n\n  const onActiveSettingChange = useCallback(\n    (setting) => {\n      if (setting === activeSetting) {\n        setActiveSetting(null);\n        return;\n      }\n      setActiveSetting(setting);\n    },\n    [activeSetting]\n  );\n\n  return {\n    activeSetting,\n    backgroundColor,\n    textColor,\n    displayColor,\n    setActiveSetting,\n    setBackgroundColor,\n    setTextColor,\n    setDisplayColor,\n    onActiveSettingChange\n  };\n};\n"],"sourceRoot":""}