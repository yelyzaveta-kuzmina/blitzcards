{"version":3,"sources":["state/index.js","state/languages.js","modules/languages/utils/local-storage.js","state/categories.js","modules/categories/utils/local-storage.js","state/words.js","modules/words/utils/local-storage.js","utils/carets.js","utils/css.js","utils/local-storage.js","state/theming.js","components/display-box/styles.module.scss","components/start-page-button/styles.module.scss","modules/app/styles.module.scss","utils/json.js","components/suspense-loading/index.js","components/display-box/index.js","components/start-page-button/lightning.js","components/start-page-button/index.js","modules/app/index.js","index.js"],"names":["AppStateContext","createContext","useAppState","useContext","AppStateProvider","children","useState","submittedTranslationDirection","setTranslationDirection","caretIndex","setCaretIndex","caretOptions","submittedCaret","setSubmittedCaret","value","isTutorialShown","setTutorialShown","Provider","initialLanguages","json","localStorage","getItem","safeParse","getPersistedLanguage","LanguagesContext","useLanguages","LanguagesProvider","languages","setLanguages","onLanguageAdd","useCallback","language","onLanguageDelete","languageToRemove","newLanguages","filter","id","useEffect","setItem","JSON","stringify","initialCategories","getPersistedCategory","CategoriesContext","useCategories","CategoriesProvider","categories","setCategories","onCategoryAdd","category","newCategory","uuid","onCategoryDelete","categoryIdToRemove","newCategories","initialWords","getPersistedWord","WordsContext","useWords","WordsProvider","words","setWords","onWordAdd","word","newWord","onWordDelete","wordIdToRemove","newWords","setCssVariable","variableName","document","documentElement","style","setProperty","persistBackgroundColor","color","persistTextColor","persistedBackgroundColor","getPersistedBackgroundColor","persistedTextColor","getPersistedTextColor","lighterTextColor","lighten","toString","persistedDisplayColor","getPersistedDisplayColor","ThemingContext","useTheming","ThemingProvider","backgroundColor","setBackgroundColor","textColor","setTextColor","displayColor","setDisplayColor","persistDisplayColor","module","exports","fallbackValue","parse","error","LoadingComponent","loading","className","size","DisplayBox","styles","wrapper","LightningIcon","xmlns","x","y","enableBackground","version","viewBox","xmlSpace","cx","cy","r","fill","d","StartPageButton","to","history","useHistory","onClick","push","classNames","button","StartPageAsync","lazy","LanguagesAsync","SelectedLanguageAsync","SelectedCategoryAsync","SettingsWindowAsync","GameSettingsWindowAsync","NewGame","Application","startPageButton","fallback","path","exact","component","ReactDOM","render","basename","hashType","getElementById"],"mappings":"4KAGMA,EAAkBC,wBAAc,IAsBzBC,EAAc,kBAAMC,qBAAWH,IAE7BI,IAtBU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACwBC,mBAAS,kBADjC,mBAClCC,EADkC,KACHC,EADG,OAELF,mBAAS,GAFJ,mBAElCG,EAFkC,KAEtBC,EAFsB,OAGGJ,mBAASK,IAAaF,IAHzB,mBAGlCG,EAHkC,KAGlBC,EAHkB,OAIGP,oBAAS,GAJZ,mBAMnCQ,EAAQ,CACZP,gCACAC,0BACAC,aACAC,gBACAE,iBACAC,oBACAE,gBAbuC,KAcvCC,iBAduC,MAiBzC,OAAO,cAAChB,EAAgBiB,SAAjB,CAA0BH,MAAOA,EAAjC,SAAyCT,M,0GCnB5Ca,ECE8B,WAClC,IAAMC,EAAOC,aAAaC,QAAQ,YAClC,OAAOC,YAAUH,EAAM,IDJAI,GAEnBC,EAAmBvB,wBAAc,IA8B1BwB,EAAe,kBAAMtB,qBAAWqB,IAE9BE,IA9BW,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,EACRC,mBAASY,GADD,mBACnCS,EADmC,KACxBC,EADwB,KAGpCC,EAAgBC,uBAAY,SAACC,GACjCH,GAAa,SAACD,GAAD,4BAAmBA,GAAnB,CAA8BI,SAC1C,IAEGC,EAAmBF,uBACvB,SAACG,GACC,IAAMC,EAAeP,EAAUQ,QAAO,SAACJ,GAAD,OAAcA,EAASK,KAAOH,KACpEL,EAAaM,KAEf,CAACP,IAGHU,qBAAU,WCpBmB,IAACN,IDqBZJ,ECpBlBP,aAAakB,QAAQ,WAAYC,KAAKC,UAAUT,MDqB7C,CAACJ,IAEJ,IAAMb,EAAQ,CACZa,YACAE,gBACAG,oBAGF,OAAO,cAACR,EAAiBP,SAAlB,CAA2BH,MAAOA,EAAlC,SAA0CT,M,0HE5B7CoC,ECC8B,WAClC,IAAMtB,EAAOC,aAAaC,QAAQ,YAClC,OAAOC,YAAUH,EAAM,IDHCuB,GAEpBC,EAAoB1C,wBAAc,IAkC3B2C,EAAgB,kBAAMzC,qBAAWwC,IAE/BE,IAlCY,SAAC,GAAkB,IAAhBxC,EAAe,EAAfA,SAAe,EACPC,mBAASmC,GADF,mBACpCK,EADoC,KACxBC,EADwB,KAGrCC,EAAgBlB,uBAAY,SAACmB,GACjC,IAAMC,EAAW,aACfd,GAAIe,kBACDF,GAELF,GAAc,SAACD,GAAD,4BAAoBA,GAApB,CAAgCI,SAC7C,IAEGE,EAAmBtB,uBACvB,SAACuB,GACC,IAAMC,EAAgBR,EAAWX,QAAO,SAACc,GAAD,OAAcA,EAASb,KAAOiB,KACtEN,EAAcO,KAEhB,CAACR,IAGHT,qBAAU,WCzBmB,IAACY,ID0BZH,ECzBlB1B,aAAakB,QAAQ,WAAYC,KAAKC,UAAUS,MD0B7C,CAACH,IAEJ,IAAMhC,EAAQ,CACZgC,aACAE,gBACAI,oBAGF,OAAO,cAACT,EAAkB1B,SAAnB,CAA4BH,MAAOA,EAAnC,SAA2CT,M,0HEjC9CkD,ECA0B,WAC9B,IAAMpC,EAAOC,aAAaC,QAAQ,QAClC,OAAOC,YAAUH,EAAM,IDFJqC,GAEfC,EAAexD,wBAAc,IAkCtByD,EAAW,kBAAMvD,qBAAWsD,IAE1BE,IAlCO,SAAC,GAAkB,IAAhBtD,EAAe,EAAfA,SAAe,EACZC,mBAASiD,GADG,mBAC/BK,EAD+B,KACxBC,EADwB,KAGhCC,EAAYhC,uBAAY,SAACiC,GAC7B,IAAMC,EAAO,aACX5B,GAAIe,kBACDY,GAELF,GAAS,SAACD,GAAD,4BAAeA,GAAf,CAAsBI,SAC9B,IAEGC,EAAenC,uBACnB,SAACoC,GACC,IAAMC,EAAWP,EAAMzB,QAAO,SAAC4B,GAAD,OAAUA,EAAK3B,KAAO8B,KACpDL,EAASM,KAEX,CAACP,IAGHvB,qBAAU,WCzBe,IAAC0B,ID0BZH,EC1BqBxC,aAAakB,QAAQ,OAAQC,KAAKC,UAAUuB,MD2B5E,CAACH,IAEJ,IAAM9C,EAAQ,CACZ8C,QACAE,YACAG,gBAGF,OAAO,cAACR,EAAaxC,SAAd,CAAuBH,MAAOA,EAA9B,SAAsCT,M,gCErC/C,kCAAO,IAAMM,EAAe,CAAC,SAAK,SAAK,SAAK,eAAM,eAAM,SAAK,W,4GCAhDyD,EAAiB,SAACC,EAAcvD,GACtCA,GAGLwD,SAASC,gBAAgBC,MAAMC,YAAYJ,EAAcvD,I,OCG9C4D,EAAyB,SAACC,GAAD,OACpCvD,aAAakB,QAAQ,mBAAoBC,KAAKC,UAAUmC,KAO7CC,EAAmB,SAACD,GAAD,OAC9BvD,aAAakB,QAAQ,aAAcC,KAAKC,UAAUmC,KCA9CE,EDNqC,WACzC,IAAM1D,EAAOC,aAAaC,QAAQ,oBAClC,OAAOC,YAAUH,GCIc2D,GAC3BC,EDC+B,WACnC,IAAM5D,EAAOC,aAAaC,QAAQ,cAClC,OAAOC,YAAUH,GCHQ6D,GACrBC,EAAmBN,IAAMI,GAAoBG,QAAQ,IAAKC,WAC1DC,EDOkC,WACtC,IAAMjE,EAAOC,aAAaC,QAAQ,iBAClC,OAAOC,YAAUH,GCTWkE,GAE9BjB,EAAe,qBAAsBM,GACrCN,EAAe,eAAgBQ,GAC/BR,EAAe,qBAAsBa,GACrCb,EAAe,kBAAmBgB,GAElC,IAAME,EAAiBrF,wBAAc,IAsCxBsF,EAAa,kBAAMpF,qBAAWmF,IAE5BE,IAtCS,SAAC,GAAkB,IAAhBnF,EAAe,EAAfA,SAAe,EACMC,mBAC5CuE,GAlB6B,WAgBS,mBACjCY,EADiC,KAChBC,EADgB,OAINpF,mBAASyE,GAnBlB,WAee,mBAIjCY,EAJiC,KAItBC,EAJsB,OAKAtF,mBAAS8E,GAnBrB,SAcY,mBAKjCS,EALiC,KAKnBC,EALmB,KAOxCzD,qBAAU,WACR+B,EAAe,qBAAsBqB,GACrCf,EAAuBe,KACtB,CAACA,IAEJpD,qBAAU,WACR,IAAM4C,EAAmBN,IAAMgB,GAAWT,QAAQ,IAAKC,WACvDf,EAAe,eAAgBuB,GAC/BvB,EAAe,qBAAsBa,GACrCL,EAAiBe,KAChB,CAACA,IAEJtD,qBAAU,WACR+B,EAAe,kBAAmByB,GDzBH,SAAClB,GAClCvD,aAAakB,QAAQ,gBAAiBC,KAAKC,UAAUmC,ICyBnDoB,CAAoBF,KACnB,CAACA,IAEJ,IAAM/E,EAAQ,CACZ2E,kBACAE,YACAE,eACAH,qBACAE,eACAE,mBAGF,OAAO,cAACR,EAAerE,SAAhB,CAAyBH,MAAOA,EAAhC,SAAwCT,M,mBC5DjD2F,EAAOC,QAAU,CAAC,QAAU,0B,mBCA5BD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,gBAAkB,kC,oDCDpC,kCAAO,IAAM3E,EAAY,SAACH,EAAM+E,GAC9B,IAAK/E,EACH,OAAO+E,EAGT,IACE,OAAO3D,KAAK4D,MAAMhF,GAClB,MAAOiF,GACP,OAAOF,K,yJCKIG,EAVU,WAAO,IAAD,EACX/F,oBAAS,GAApBgG,EADsB,oBAG7B,OACE,qBAAKC,UAAU,gBAAf,SACE,cAAC,IAAD,CAAWC,KAAM,IAAK7B,MAAO,OAAQ2B,QAASA,O,iBCFrCG,EAJI,SAAC,GAAkB,IAAhBpG,EAAe,EAAfA,SACpB,OAAO,qBAAKkG,UAAWG,IAAOC,QAAvB,SAAiCtG,KCuB3BuG,MA1Bf,WACE,OACE,sBACEC,MAAM,6BACNC,EAAE,IACFC,EAAE,IACFC,iBAAiB,kBACjBC,QAAQ,MACRC,QAAQ,cACRC,SAAS,WAPX,UAQE,wBAAQC,GAAG,MAAMC,GAAG,MAAMC,EAAE,QAAQC,KAAK,YACzC,sBACEA,KAAK,UACLC,EAAE,uXACJ,sBACED,KAAK,OACLC,EAAE,sHACJ,sBACED,KAAK,UACLC,EAAE,2PACJ,sBAAMA,EAAE,2eACR,sBAAMA,EAAE,mhB,kCCCCC,EAhBS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,GAAInB,EAAgB,EAAhBA,UACvBoB,EAAUC,cAEVC,EAAU/F,uBAAY,WAC1B6F,EAAQG,KAAKJ,KACZ,CAACA,EAAIC,IAER,OACE,qBAAKpB,UAAWwB,IAAWrB,IAAOsB,OAAQzB,GAA1C,SACE,qBAAKsB,QAASA,EAAd,SACE,cAAC,EAAD,S,iBCTFI,EAAiBC,gBAAK,kBAAM,8DAC5BC,EAAiBD,gBAAK,kBAAM,8DAC5BE,EAAwBF,gBAAK,kBAAM,8DACnCG,EAAwBH,gBAAK,kBAAM,8DACnCI,EAAsBJ,gBAAK,kBAAM,wDACjCK,EAA0BL,gBAAK,kBAAM,wDACrCM,EAAUN,gBAAK,kBAAM,wDA2BZO,EAzBK,WAClB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAiBlC,UAAWG,IAAOgC,gBAAiBhB,GAAG,MACvD,cAAC,WAAD,CAAUiB,SAAU,cAAC,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWb,IACjC,cAAC,IAAD,CAAOW,KAAK,aAAaE,UAAWX,IACpC,cAAC,IAAD,CACES,KAAK,2DACLE,UAAWP,IAEb,cAAC,IAAD,CAAOK,KAAK,kDAAkDE,UAAWN,IACzE,cAAC,IAAD,CACEI,KAAK,6CACLE,UAAWT,IAEb,cAAC,IAAD,CAAOO,KAAK,mCAAmCE,UAAWV,IAC1D,cAAC,IAAD,CAAOQ,KAAK,YAAYE,UAAWR,a,YCtB7CS,IAASC,OACP,cAAC,IAAD,CAAQC,SAAS,cAAcC,SAAS,UAAxC,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,gBAOZ5E,SAAS6E,eAAe,W","file":"static/js/main.d49f52a8.chunk.js","sourcesContent":["import { createContext, useContext, useState } from 'react';\nimport { caretOptions } from '../utils/carets';\n\nconst AppStateContext = createContext({});\n\nconst AppStateProvider = ({ children }) => {\n  const [submittedTranslationDirection, setTranslationDirection] = useState('sourceLanguage');\n  const [caretIndex, setCaretIndex] = useState(0);\n  const [submittedCaret, setSubmittedCaret] = useState(caretOptions[caretIndex]);\n  const [isTutorialShown, setTutorialShown] = useState(false);\n\n  const value = {\n    submittedTranslationDirection,\n    setTranslationDirection,\n    caretIndex,\n    setCaretIndex,\n    submittedCaret,\n    setSubmittedCaret,\n    isTutorialShown,\n    setTutorialShown\n  };\n\n  return <AppStateContext.Provider value={value}>{children}</AppStateContext.Provider>;\n};\n\nexport const useAppState = () => useContext(AppStateContext);\n\nexport default AppStateProvider;\n","import { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { persistLanguage, getPersistedLanguage } from '../modules/languages/utils/local-storage';\n\nconst initialLanguages = getPersistedLanguage();\n\nconst LanguagesContext = createContext({});\n\nconst LanguagesProvider = ({ children }) => {\n  const [languages, setLanguages] = useState(initialLanguages);\n\n  const onLanguageAdd = useCallback((language) => {\n    setLanguages((languages) => [...languages, language]);\n  }, []);\n\n  const onLanguageDelete = useCallback(\n    (languageToRemove) => {\n      const newLanguages = languages.filter((language) => language.id !== languageToRemove);\n      setLanguages(newLanguages);\n    },\n    [languages]\n  );\n\n  useEffect(() => {\n    persistLanguage(languages);\n  }, [languages]);\n\n  const value = {\n    languages,\n    onLanguageAdd,\n    onLanguageDelete\n  };\n\n  return <LanguagesContext.Provider value={value}>{children}</LanguagesContext.Provider>;\n};\n\nexport const useLanguages = () => useContext(LanguagesContext);\n\nexport default LanguagesProvider;\n","import { safeParse } from '../../../utils/json';\n\nexport const persistLanguage = (language) =>\n  localStorage.setItem('language', JSON.stringify(language));\n\nexport const getPersistedLanguage = () => {\n  const json = localStorage.getItem('language');\n  return safeParse(json, []);\n};\n","import { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { persistCategory, getPersistedCategory } from '../modules/categories/utils/local-storage';\nimport { uuid } from 'uuidv4';\n\nconst initialCategories = getPersistedCategory();\n\nconst CategoriesContext = createContext({});\n\nconst CategoriesProvider = ({ children }) => {\n  const [categories, setCategories] = useState(initialCategories);\n\n  const onCategoryAdd = useCallback((category) => {\n    const newCategory = {\n      id: uuid(),\n      ...category\n    };\n    setCategories((categories) => [...categories, newCategory]);\n  }, []);\n\n  const onCategoryDelete = useCallback(\n    (categoryIdToRemove) => {\n      const newCategories = categories.filter((category) => category.id !== categoryIdToRemove);\n      setCategories(newCategories);\n    },\n    [categories]\n  );\n\n  useEffect(() => {\n    persistCategory(categories);\n  }, [categories]);\n\n  const value = {\n    categories,\n    onCategoryAdd,\n    onCategoryDelete\n  };\n\n  return <CategoriesContext.Provider value={value}>{children}</CategoriesContext.Provider>;\n};\n\nexport const useCategories = () => useContext(CategoriesContext);\n\nexport default CategoriesProvider;\n","import { safeParse } from '../../../utils/json';\n\nexport const persistCategory = (category) =>\n  localStorage.setItem('category', JSON.stringify(category));\n\nexport const getPersistedCategory = () => {\n  const json = localStorage.getItem('category');\n  return safeParse(json, []);\n};\n","import { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { persistWord, getPersistedWord } from '../modules/words/utils/local-storage';\nimport { uuid } from 'uuidv4';\n\nconst initialWords = getPersistedWord();\n\nconst WordsContext = createContext({});\n\nconst WordsProvider = ({ children }) => {\n  const [words, setWords] = useState(initialWords);\n\n  const onWordAdd = useCallback((word) => {\n    const newWord = {\n      id: uuid(),\n      ...word\n    };\n    setWords((words) => [...words, newWord]);\n  }, []);\n\n  const onWordDelete = useCallback(\n    (wordIdToRemove) => {\n      const newWords = words.filter((word) => word.id !== wordIdToRemove);\n      setWords(newWords);\n    },\n    [words]\n  );\n\n  useEffect(() => {\n    persistWord(words);\n  }, [words]);\n\n  const value = {\n    words,\n    onWordAdd,\n    onWordDelete\n  };\n\n  return <WordsContext.Provider value={value}>{children}</WordsContext.Provider>;\n};\n\nexport const useWords = () => useContext(WordsContext);\n\nexport default WordsProvider;\n","import { safeParse } from '../../../utils/json';\n\nexport const persistWord = (word) => localStorage.setItem('word', JSON.stringify(word));\n\nexport const getPersistedWord = () => {\n  const json = localStorage.getItem('word');\n  return safeParse(json, []);\n};\n","export const caretOptions = ['⚡', '❤', '⭐', '💎', '🔻', '▫', '•'];\n","export const setCssVariable = (variableName, value) => {\n  if (!value) {\n    return;\n  }\n  document.documentElement.style.setProperty(variableName, value);\n};\n","import { safeParse } from './json';\n\n// const createPersistColorFunction = (colorName) => (color) =>\n//   localStorage.setItem(colorName, JSON.stringify(color));\n\n// export const persistBackgroundColor = createPersistColorFunction('background-color');\n\nexport const persistBackgroundColor = (color) =>\n  localStorage.setItem('background-color', JSON.stringify(color));\n\nexport const getPersistedBackgroundColor = () => {\n  const json = localStorage.getItem('background-color');\n  return safeParse(json);\n};\n\nexport const persistTextColor = (color) =>\n  localStorage.setItem('text-color', JSON.stringify(color));\n\nexport const getPersistedTextColor = () => {\n  const json = localStorage.getItem('text-color');\n  return safeParse(json);\n};\n\nexport const persistDisplayColor = (color) =>\n  localStorage.setItem('display-color', JSON.stringify(color));\n\nexport const getPersistedDisplayColor = () => {\n  const json = localStorage.getItem('display-color');\n  return safeParse(json);\n};\n","import { createContext, useContext, useState, useEffect } from 'react';\nimport color from 'color';\nimport { setCssVariable } from '../utils/css';\nimport {\n  persistBackgroundColor,\n  getPersistedBackgroundColor,\n  persistTextColor,\n  getPersistedTextColor,\n  persistDisplayColor,\n  getPersistedDisplayColor\n} from '../utils/local-storage';\n\nconst DEFAULT_BACKGROUND_COLOR = '#4399AF';\nconst DEFAULT_TEXT_COLOR = '#7b7676';\nconst DEFAULT_DISPLAY_COLOR = 'white';\n\nconst persistedBackgroundColor = getPersistedBackgroundColor();\nconst persistedTextColor = getPersistedTextColor();\nconst lighterTextColor = color(persistedTextColor).lighten(0.3).toString();\nconst persistedDisplayColor = getPersistedDisplayColor();\n\nsetCssVariable('--background-color', persistBackgroundColor);\nsetCssVariable('--text-color', persistTextColor);\nsetCssVariable('--text-color-light', lighterTextColor);\nsetCssVariable('--display-color', persistedDisplayColor);\n\nconst ThemingContext = createContext({});\n\nconst ThemingProvider = ({ children }) => {\n  const [backgroundColor, setBackgroundColor] = useState(\n    persistedBackgroundColor || DEFAULT_BACKGROUND_COLOR\n  );\n  const [textColor, setTextColor] = useState(persistedTextColor || DEFAULT_TEXT_COLOR);\n  const [displayColor, setDisplayColor] = useState(persistedDisplayColor || DEFAULT_DISPLAY_COLOR);\n\n  useEffect(() => {\n    setCssVariable('--background-color', backgroundColor);\n    persistBackgroundColor(backgroundColor);\n  }, [backgroundColor]);\n\n  useEffect(() => {\n    const lighterTextColor = color(textColor).lighten(0.3).toString();\n    setCssVariable('--text-color', textColor);\n    setCssVariable('--text-color-light', lighterTextColor);\n    persistTextColor(textColor);\n  }, [textColor]);\n\n  useEffect(() => {\n    setCssVariable('--display-color', displayColor);\n    persistDisplayColor(displayColor);\n  }, [displayColor]);\n\n  const value = {\n    backgroundColor,\n    textColor,\n    displayColor,\n    setBackgroundColor,\n    setTextColor,\n    setDisplayColor\n  };\n\n  return <ThemingContext.Provider value={value}>{children}</ThemingContext.Provider>;\n};\n\nexport const useTheming = () => useContext(ThemingContext);\n\nexport default ThemingProvider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__3HDkj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__3GviN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"startPageButton\":\"styles_startPageButton__3xlAw\"};","export const safeParse = (json, fallbackValue) => {\n  if (!json) {\n    return fallbackValue;\n  }\n\n  try {\n    return JSON.parse(json);\n  } catch (error) {\n    return fallbackValue;\n  }\n};\n","import { useState } from 'react';\nimport BarLoader from 'react-spinners/BarLoader';\n\nconst LoadingComponent = () => {\n  const [loading] = useState(true);\n\n  return (\n    <div className=\"sweet-loading\">\n      <BarLoader size={150} color={'gray'} loading={loading} />\n    </div>\n  );\n};\n\nexport default LoadingComponent;\n","import styles from './styles.module.scss';\n\nconst DisplayBox = ({ children }) => {\n  return <div className={styles.wrapper}>{children}</div>;\n};\n\nexport default DisplayBox;\n","function LightningIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0\"\n      y=\"0\"\n      enableBackground=\"new 0 0 512 512\"\n      version=\"1.1\"\n      viewBox=\"0 0 512 512\"\n      xmlSpace=\"preserve\">\n      <circle cx=\"256\" cy=\"256\" r=\"248.5\" fill=\"#FFD164\"></circle>\n      <path\n        fill=\"#FFE17D\"\n        d=\"M357.924 227.994h.04M327.539 79.645h-102.03a24.047 24.047 0 00-22.828 16.485l-54.913 165.734a24.05 24.05 0 0022.828 31.612h49.258l-40.94 130.336c-3.494 11.125 1.497 23.155 11.841 28.539a24.038 24.038 0 0030.168-6.676L376.568 243.2a23.93 23.93 0 005.424-15.206c0-13.282-10.746-24.048-24.028-24.048h-52.169l43.397-89.787a24.048 24.048 0 00-21.653-34.514zm0 48.097h.04-.04z\"></path>\n      <path\n        fill=\"#FFF\"\n        d=\"M357.924 227.994L267.461 227.994 327.539 103.694 225.509 103.694 170.596 269.428 252.614 269.428 201.857 431.019z\"></path>\n      <path\n        fill=\"#FFC350\"\n        d=\"M288.065 472.435c-137.243 0-248.5-111.258-248.5-248.5 0-60.457 21.608-115.855 57.498-158.938C42.343 110.581 7.5 179.214 7.5 256c0 137.242 111.257 248.5 248.5 248.5 76.787 0 145.421-34.844 191.004-89.564-43.083 35.891-98.482 57.499-158.939 57.499z\"></path>\n      <path d=\"M437.02 74.98C388.667 26.629 324.38 0 256 0S123.333 26.629 74.98 74.98C26.629 123.333 0 187.62 0 256s26.629 132.667 74.98 181.02C123.333 485.371 187.62 512 256 512s132.667-26.629 181.02-74.98C485.371 388.667 512 324.38 512 256s-26.629-132.667-74.98-181.02zm-10.607 351.433C380.894 471.932 320.374 497 256 497s-124.894-25.068-170.413-70.587S15 320.374 15 256 40.068 131.106 85.587 85.587 191.626 15 256 15s124.894 25.068 170.413 70.587S497 191.626 497 256s-25.068 124.894-70.587 170.413z\"></path>\n      <path d=\"M357.924 220.494h-78.508l33.636-69.593a7.499 7.499 0 00-3.489-10.016 7.496 7.496 0 00-10.016 3.489l-38.839 80.357a7.499 7.499 0 006.753 10.764h75.238L221.687 392.917l38.083-121.242a7.5 7.5 0 00-7.155-9.748h-71.632l49.944-150.734h84.659l-2.209 4.572a7.499 7.499 0 003.489 10.016 7.499 7.499 0 0010.016-3.489l7.412-15.335a7.499 7.499 0 00-6.753-10.764h-102.03a7.501 7.501 0 00-7.12 5.141l-54.914 165.734a7.502 7.502 0 007.12 9.859h71.801l-47.695 151.844a7.499 7.499 0 0013.101 6.818L363.87 232.565a7.5 7.5 0 00-5.946-12.071z\"></path>\n    </svg>\n  );\n}\n\nexport default LightningIcon;\n","import { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport LightningIcon from './lightning';\nimport classNames from 'classnames';\nimport styles from './styles.module.scss';\n\nconst StartPageButton = ({ to, className }) => {\n  const history = useHistory();\n\n  const onClick = useCallback(() => {\n    history.push(to);\n  }, [to, history]);\n\n  return (\n    <div className={classNames(styles.button, className)}>\n      <div onClick={onClick}>\n        <LightningIcon />\n      </div>\n    </div>\n  );\n};\n\nexport default StartPageButton;\n","import { lazy, Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport LoadingComponent from '../../components/suspense-loading';\nimport DisplayBox from '../../components/display-box';\nimport StartPageButton from '../../components/start-page-button';\nimport styles from './styles.module.scss';\n\nconst StartPageAsync = lazy(() => import('../start-page'));\nconst LanguagesAsync = lazy(() => import('../languages'));\nconst SelectedLanguageAsync = lazy(() => import('../selected-language'));\nconst SelectedCategoryAsync = lazy(() => import('../selected-category'));\nconst SettingsWindowAsync = lazy(() => import('../settings-window'));\nconst GameSettingsWindowAsync = lazy(() => import('../game-settings-window'));\nconst NewGame = lazy(() => import('../game'));\n\nconst Application = () => {\n  return (\n    <DisplayBox>\n      <StartPageButton className={styles.startPageButton} to=\"/\" />\n      <Suspense fallback={<LoadingComponent />}>\n        <Switch>\n          <Route path=\"/\" exact component={StartPageAsync} />\n          <Route path=\"/languages\" component={LanguagesAsync} />\n          <Route\n            path=\"/:sourceLanguage-:targetLanguage/:category/game-settings\"\n            component={GameSettingsWindowAsync}\n          />\n          <Route path=\"/:sourceLanguage-:targetLanguage/:category/game\" component={NewGame} />\n          <Route\n            path=\"/:sourceLanguage-:targetLanguage/:category\"\n            component={SelectedCategoryAsync}\n          />\n          <Route path=\"/:sourceLanguage-:targetLanguage\" component={SelectedLanguageAsync} />\n          <Route path=\"/settings\" component={SettingsWindowAsync} />\n        </Switch>\n      </Suspense>\n    </DisplayBox>\n  );\n};\n\nexport default Application;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AppStateProvider from './state';\nimport ThemeProvider from './state/theming';\nimport LanguagesProvider from './state/languages';\nimport CategoriesProvider from './state/categories';\nimport WordsProvider from './state/words';\nimport App from './modules/app';\nimport './index.scss';\nimport 'normalize.css';\n\nReactDOM.render(\n  <Router basename=\"/blitzcards\" hashType=\"noslash\">\n    <ThemeProvider>\n      <LanguagesProvider>\n        <CategoriesProvider>\n          <WordsProvider>\n            <AppStateProvider>\n              <App />\n            </AppStateProvider>\n          </WordsProvider>\n        </CategoriesProvider>\n      </LanguagesProvider>\n    </ThemeProvider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}